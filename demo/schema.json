{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Test set name"},"description":{"type":"string","description":"Test set description"},"tags":{"type":"array","description":"Test set tags","items":{"type":"string","description":"Tag name"}},"defaults":{"type":"object","description":"Default parameters for modules","additionalProperties":false,"properties":{"http":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}}},"patternProperties":{".*":{"type":"object","description":"Default module parameters"}}},"params":{"type":"object","description":"TestSet parameters"},"beforeAll":{"type":"array","description":"Tasks to run before this TestSet","items":{"type":"object","required":["do"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"Unique ID of the task within a test"},"description":{"type":"string","description":"Task description"},"do":{"type":"string","description":"Command identifier"},"args":{"type":"object","description":"Module arguments","default":{}},"expect":{"type":"object","description":"Expectation arguments"},"set":{"type":"object","description":"Assign values from task result to parameter"},"runBeforeAsync":{"type":"string","description":"Specifies a task ID that current task must be run before async"},"continueOnError":{"type":"boolean","description":"If to continue to other task if an error occur during task execution","default":false}},"anyOf":[{"description":"Returns args as result","properties":{"do":{"enum":["redis.hget"]}}},{"description":"Calls a HTTP endpoint using the GET method.","properties":{"do":{"enum":["http.get"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Calls a HTTP endpoint using the POST method.","properties":{"do":{"enum":["http.post"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Evaluates JavaScript code both for run and expect (if set)","properties":{"do":{"enum":["js.eval"]},"args":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}},"expect":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}}}}]}},"afterAll":{"type":"array","description":"Tasks to run after this TestSet","items":{"type":"object","required":["do"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"Unique ID of the task within a test"},"description":{"type":"string","description":"Task description"},"do":{"type":"string","description":"Command identifier"},"args":{"type":"object","description":"Module arguments","default":{}},"expect":{"type":"object","description":"Expectation arguments"},"set":{"type":"object","description":"Assign values from task result to parameter"},"runBeforeAsync":{"type":"string","description":"Specifies a task ID that current task must be run before async"},"continueOnError":{"type":"boolean","description":"If to continue to other task if an error occur during task execution","default":false}},"anyOf":[{"description":"Returns args as result","properties":{"do":{"enum":["redis.hget"]}}},{"description":"Calls a HTTP endpoint using the GET method.","properties":{"do":{"enum":["http.get"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Calls a HTTP endpoint using the POST method.","properties":{"do":{"enum":["http.post"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Evaluates JavaScript code both for run and expect (if set)","properties":{"do":{"enum":["js.eval"]},"args":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}},"expect":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}}}}]}},"beforeEach":{"type":"array","description":"Tasks to run before each Test","items":{"type":"object","required":["do"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"Unique ID of the task within a test"},"description":{"type":"string","description":"Task description"},"do":{"type":"string","description":"Command identifier"},"args":{"type":"object","description":"Module arguments","default":{}},"expect":{"type":"object","description":"Expectation arguments"},"set":{"type":"object","description":"Assign values from task result to parameter"},"runBeforeAsync":{"type":"string","description":"Specifies a task ID that current task must be run before async"},"continueOnError":{"type":"boolean","description":"If to continue to other task if an error occur during task execution","default":false}},"anyOf":[{"description":"Returns args as result","properties":{"do":{"enum":["redis.hget"]}}},{"description":"Calls a HTTP endpoint using the GET method.","properties":{"do":{"enum":["http.get"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Calls a HTTP endpoint using the POST method.","properties":{"do":{"enum":["http.post"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Evaluates JavaScript code both for run and expect (if set)","properties":{"do":{"enum":["js.eval"]},"args":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}},"expect":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}}}}]}},"afterEach":{"type":"array","description":"Tasks to run fter each Test","items":{"type":"object","required":["do"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"Unique ID of the task within a test"},"description":{"type":"string","description":"Task description"},"do":{"type":"string","description":"Command identifier"},"args":{"type":"object","description":"Module arguments","default":{}},"expect":{"type":"object","description":"Expectation arguments"},"set":{"type":"object","description":"Assign values from task result to parameter"},"runBeforeAsync":{"type":"string","description":"Specifies a task ID that current task must be run before async"},"continueOnError":{"type":"boolean","description":"If to continue to other task if an error occur during task execution","default":false}},"anyOf":[{"description":"Returns args as result","properties":{"do":{"enum":["redis.hget"]}}},{"description":"Calls a HTTP endpoint using the GET method.","properties":{"do":{"enum":["http.get"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Calls a HTTP endpoint using the POST method.","properties":{"do":{"enum":["http.post"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Evaluates JavaScript code both for run and expect (if set)","properties":{"do":{"enum":["js.eval"]},"args":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}},"expect":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}}}}]}},"executionOrder":{"type":"string","description":"If tests should be run synchronously after each other or asynchronously. By default test are executed async.","default":"async","enum":["async","sync"]},"skip":{"type":"boolean","description":"If to skip this Test set","default":false},"tests":{"type":"array","description":"Set of tests","items":{"type":"object","description":"Single test","required":["description","tasks"],"properties":{"name":{"type":"string","description":"Test name"},"description":{"type":"string","description":"Test description"},"tags":{"type":"array","description":"Test tags","items":{"type":"string","description":"Tag name"}},"defaults":{"type":"object","description":"Default parameters for modules","additionalProperties":false,"properties":{"http":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}}},"patternProperties":{".*":{"type":"object","description":"Default module parameters"}}},"params":{"type":"object","description":"Test parameters"},"skip":{"type":"boolean","description":"If to skip this Test","default":false},"tasks":{"type":"array","description":"Test tasks","items":{"type":"object","required":["do"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"Unique ID of the task within a test"},"description":{"type":"string","description":"Task description"},"do":{"type":"string","description":"Command identifier"},"args":{"type":"object","description":"Module arguments","default":{}},"expect":{"type":"object","description":"Expectation arguments"},"set":{"type":"object","description":"Assign values from task result to parameter"},"runBeforeAsync":{"type":"string","description":"Specifies a task ID that current task must be run before async"},"continueOnError":{"type":"boolean","description":"If to continue to other task if an error occur during task execution","default":false}},"anyOf":[{"description":"Returns args as result","properties":{"do":{"enum":["redis.hget"]}}},{"description":"Calls a HTTP endpoint using the GET method.","properties":{"do":{"enum":["http.get"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Calls a HTTP endpoint using the POST method.","properties":{"do":{"enum":["http.post"]},"args":{"type":"object","description":"Module provides HTTP calls and response assertions.","properties":{"url":{"type":"string","description":"Request URL"},"baseUrl":{"type":"string","description":"Base URL for the request"},"path":{"type":"string","description":"Endpoint path"},"query":{"type":"object","description":"Query parameters"},"body":{"type":"string","description":"Body payload"},"jsonBody":{}}},"expect":{"type":"object","properties":{"code":{"type":"integer","description":"Response HTTP status code"},"jsonSchema":{"type":"object","description":"JSON schema to validate response body"}}}}},{"description":"Evaluates JavaScript code both for run and expect (if set)","properties":{"do":{"enum":["js.eval"]},"args":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}},"expect":{"type":"object","properties":{"code":{"type":"string","description":"JavaScript expression code"},"script":{"type":"string","description":"JavaScript script code (you are allowed to use multiple statements)"}}}}}]}}}}}}}